name: Deploy to Firebase Hosting on merge
'on':
  push:
    branches:
      - main
    paths-ignore:
      - '**/*.md'
      - .github/workflows/firebase-hosting-pull-request.yml
jobs:
  build_and_deploy:
    env:
      GOOGLE_APPLICATION_CREDENTIALS: /tmp/service-account.json
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Create Service Account key
        run: |
          echo '${{ secrets.FIREBASE_SERVICE_ACCOUNT_KYUBIKOHUB }}' \
          > $GOOGLE_APPLICATION_CREDENTIALS

      - name: Detect modified source
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            functions:
              - 'functions/**'
            firestore:
              - 'firestore.*'
            storage:
              - 'storage.*'

      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache-dependency-path: 'package-lock.json'
      - run: npm ci

      - uses: actions/setup-python@v5
        with:
          python-version-file: '.python-version'
          cache: 'pip'
          cache-dependency-path: 'functions/requirements.txt'
      - run: |
          cd functions && \
          python -m venv venv && \
          . venv/bin/activate && \
          pip install -r requirements.txt && \
          deactivate && \
          cd ..

      - if: steps.filter.outputs.functions == 'true'
        name: Cache functions/node_modules
        uses: actions/cache@v2
        id: cache-functions-node_modules
        with:
          path: functions/node_modules
          key: ${{ runner.os }}-${{ hashFiles('functions/package-lock.json ') }}
      - name: Test Functions
        run: |
          cd functions && \
          . venv/bin/activate && \
          coverage run --omit='test/*.py' -m unittest test/test_* && \
          coverage lcov && \
          deactivate && \
          cd ..
      - if: steps.filter.outputs.firestore == 'true'
        name: Test firestore rules
        run: npm run test:firestore

      - name: Set firebase api key
        run: |
          sed 's/FIREBASE_API_KEY/${{ secrets.FIREBASE_API_KEY_KYUBIKOHUB }}/' \
            -i lib/config.dart
      - name: Set UI version
        run: |
          VERSION=`grep 'version:' pubspec.yaml | sed 's/.*\s//'` && \
            sed "s/for\ test/$VERSION/" -i lib/config.dart  && \
            echo "{\"version\":\"$VERSION\"}" > web/version.json && \
            echo $VERSION
      - uses: kuhnroyal/flutter-fvm-config-action@v2
        id: fvm-config-action
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ steps.fvm-config-action.outputs.FLUTTER_VERSION }}
          channel: ${{ steps.fvm-config-action.outputs.FLUTTER_CHANNEL }}
          cache: true
          cache-key: ${{ runner.os }}-${{ hashFiles('pubspec.lock') }}
      - run: flutter pub get
      - run: flutter build web
      - run: flutter test --coverage

      - if: steps.filter.outputs.functions == 'true'
        name: Set secretes to .env
        run: |
          echo '${{ secrets.FUNCTIONS_ENV_KYUBIKOHUB }}' \
          | sed -e 's/\//\r\n/g' > functions/.env
      - if: steps.filter.outputs.functions == 'true'
        name: Deploy Functions
        run: npx firebase deploy --only functions --force

      - if: steps.filter.outputs.firestore == 'true'
        name: Deploy Firestore
        run: npx firebase deploy --only firestore

      - if: steps.filter.outputs.storage == 'true'
        name: Deploy Storage
        run: npx firebase deploy --only storage

      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_KYUBIKOHUB }}'
          channelId: live
          projectId: kyubikohub
      - name: Trigger system update job
        run: npx firebase firestore:delete service/deployment --force
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage/lcov.info,./functions/coverage.lcov
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: MichinobuMaeda/kyubikohub
